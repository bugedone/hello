# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#docker-machine-macos-windows-executor
    # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Then simply use the dotnet container as you'd expect and run your tests
      - run:
          # Update this line with the directory that contains your tests project file
          name: Run tests
          command: |
            dotnet build
  save_hello_world_output:
    docker: 
      - image: circleci/node:13.8.0
    working_directory: /tmp
    steps:
      - run: mkdir -p myworkspace
      - run: echo "Hello sailor" > myworkspace/output.txt
      - persist_to_workspace:
          root: /tmp/myworkspace
          paths:
            - "output.txt"
  print_output_file:
     docker: 
      - image: circleci/node:13.8.0
     steps:
      - attach_workspace:
          at: /tmp/myworkspace
      - run:
          name: Print content of workspace
          command: |
            cat output.txt
   
# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
#      - build-and-test
